@using Microsoft.AspNetCore.Components
@using MudBlazor
@using PigFarmManagement.Shared.Models

<MudCard Class="mud-height-full">
    <MudCardHeader>
        <CardHeaderContent>
            <div class="d-flex align-center">
                <MudIcon Icon="@GetCustomerIcon(Customer.Status)" Class="mr-2" />
                <MudText Typo="Typo.h6">@Customer.DisplayName</MudText>
            </div>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudMenu Icon="Icons.Material.Filled.MoreVert" AnchorOrigin="Origin.BottomRight">
                <MudMenuItem OnClick="() => OnEdit.InvokeAsync(Customer)">
                    <div class="d-flex align-center">
                        <MudIcon Icon="Icons.Material.Filled.Edit" Class="mr-2" />
                        Edit
                    </div>
                </MudMenuItem>
                <MudMenuItem OnClick="() => OnDelete.InvokeAsync(Customer)">
                    <div class="d-flex align-center">
                        <MudIcon Icon="Icons.Material.Filled.Delete" Class="mr-2" />
                        Delete
                    </div>
                </MudMenuItem>
            </MudMenu>
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        <MudText Typo="Typo.body2" Class="mb-2">
            <strong>Code:</strong> @Customer.Code
        </MudText>
        <MudText Typo="Typo.body2" Class="mb-2">
            <strong>Status:</strong> 
            <MudChip Text="@Customer.Status.ToString()" 
                    Color="@GetCustomerStatusColor(Customer.Status)" 
                    Size="Size.Small" />
        </MudText>
        @if (!string.IsNullOrEmpty(Customer.Phone))
        {
            <MudText Typo="Typo.body2" Class="mb-2">
                <strong>Phone:</strong> @Customer.Phone
            </MudText>
        }
        @if (!string.IsNullOrEmpty(Customer.Email))
        {
            <MudText Typo="Typo.body2" Class="mb-2">
                <strong>Email:</strong> @Customer.Email
            </MudText>
        }
        @if (!string.IsNullOrEmpty(Customer.Address))
        {
            <MudText Typo="Typo.body2" Class="mb-2">
                <strong>Address:</strong> @Customer.Address
            </MudText>
        }
        @if (Customer.HasLocation)
        {
            <MudText Typo="Typo.body2" Class="mb-2">
                <MudIcon Icon="@Icons.Material.Filled.LocationOn" Size="Size.Small" Class="mr-1" />
                <strong>Location:</strong> @Customer.Latitude?.ToString("F4"), @Customer.Longitude?.ToString("F4")
            </MudText>
        }
        <MudText Typo="Typo.body2" Class="mb-2">
            <strong>Pig Pens:</strong> @PigPenCount
        </MudText>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Text" 
                  Color="Color.Primary"
                  StartIcon="Icons.Material.Filled.Visibility"
                  OnClick="() => OnViewDetails.InvokeAsync(Customer)">
            View Details
        </MudButton>
    </MudCardActions>
</MudCard>

@code {
    [Parameter] public Customer Customer { get; set; } = null!;
    [Parameter] public int PigPenCount { get; set; }
    [Parameter] public EventCallback<Customer> OnEdit { get; set; }
    [Parameter] public EventCallback<Customer> OnDelete { get; set; }
    [Parameter] public EventCallback<Customer> OnViewDetails { get; set; }

    private string GetCustomerIcon(CustomerStatus status)
    {
        return status switch
        {
            CustomerStatus.Active => Icons.Material.Filled.CheckCircle,
            CustomerStatus.Inactive => Icons.Material.Filled.Cancel,
            _ => Icons.Material.Filled.Person
        };
    }

    private Color GetCustomerStatusColor(CustomerStatus status)
    {
        return status switch
        {
            CustomerStatus.Active => Color.Success,
            CustomerStatus.Inactive => Color.Error,
            _ => Color.Default
        };
    }
}
