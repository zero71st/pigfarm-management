@using PigFarmManagement.Shared.Models

<MudGrid>
    <!-- Total Active Pig Pens -->
    <MudItem xs="12" sm="6" md="3">
        <MudCard Elevation="3" Class="pa-4">
            <MudCardContent>
                <div class="d-flex align-center">
                    <MudIcon Icon="Icons.Material.Filled.Home" Color="Color.Primary" Size="Size.Large" Class="mr-3" />
                    <div>
                        <MudText Typo="Typo.h4" Color="Color.Primary">@Overview.TotalActivePigPens</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">Total Active Pig Pens</MudText>
                    </div>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Total Pigs -->
    <MudItem xs="12" sm="6" md="3">
        <MudCard Elevation="3" Class="pa-4">
            <MudCardContent>
                <div class="d-flex align-center">
                    <MudIcon Icon="Icons.Material.Filled.Pets" Color="Color.Success" Size="Size.Large" Class="mr-3" />
                    <div>
                        <MudText Typo="Typo.h4" Color="Color.Success">@Overview.TotalPigs</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">Total Pigs</MudText>
                    </div>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Total Investment -->
    <MudItem xs="12" sm="6" md="3">
        <MudCard Elevation="3" Class="pa-4">
            <MudCardContent>
                <div class="d-flex align-center">
                    <MudIcon Icon="Icons.Material.Filled.TrendingUp" Color="Color.Info" Size="Size.Large" Class="mr-3" />
                    <div>
                        <MudText Typo="Typo.h4" Color="Color.Info">@FormatCurrency(Overview.TotalInvestment)</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">Total Investment</MudText>
                    </div>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Total Profit/Loss -->
    <MudItem xs="12" sm="6" md="3">
        <MudCard Elevation="3" Class="pa-4">
            <MudCardContent>
                <div class="d-flex align-center">
                    <MudIcon Icon="@GetProfitLossIcon()" Color="@GetProfitLossColor()" Size="Size.Large" Class="mr-3" />
                    <div>
                        <MudText Typo="Typo.h4" Color="@GetProfitLossColor()">@FormatCurrency(Overview.TotalProfitLoss)</MudText>
                        <MudText Typo="Typo.body2" Color="Color.Secondary">Total Profit/Loss</MudText>
                    </div>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

<!-- Overall Performance Summary -->
<MudGrid Class="mt-4">
    <MudItem xs="12">
        <MudCard Elevation="3">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="Icons.Material.Filled.Assessment" Class="mr-2" />
                        Overall Business Performance
                    </MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudList>
                    <MudListItem>
                        <MudText><strong>Active Pig Pens:</strong> @Overview.TotalActivePigPens</MudText>
                    </MudListItem>
                    <MudListItem>
                        <MudText><strong>Total Pigs:</strong> @Overview.TotalPigs</MudText>
                    </MudListItem>
                    <MudListItem>
                        <MudText><strong>Investment:</strong> @FormatCurrency(Overview.TotalInvestment)</MudText>
                    </MudListItem>
                    <MudListItem>
                        <MudText><strong>Profit/Loss:</strong> 
                            <span style="color: @(Overview.TotalProfitLoss >= 0 ? "green" : "red")">
                                @FormatCurrency(Overview.TotalProfitLoss)
                            </span>
                        </MudText>
                    </MudListItem>
                    <MudListItem>
                        <MudText><strong>ROI:</strong> @FormatPercentage(CalculateROI(Overview.TotalProfitLoss, Overview.TotalInvestment))</MudText>
                    </MudListItem>
                </MudList>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

<!-- Cash vs Project Breakdown -->
<MudGrid Class="mt-4">
    <MudItem xs="12" md="6">
        <MudCard Elevation="3">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="Icons.Material.Filled.AccountBalance" Class="mr-2" Color="Color.Success" />
                        Cash Operations
                    </MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudList>
                    <MudListItem>
                        <MudText><strong>Total Pigs:</strong> @Overview.TotalPigsCash</MudText>
                    </MudListItem>
                    <MudListItem>
                        <MudText><strong>Investment:</strong> @FormatCurrency(Overview.TotalInvestmentCash)</MudText>
                    </MudListItem>
                    <MudListItem>
                        <MudText><strong>Profit/Loss:</strong> 
                            <span style="color: @(Overview.TotalProfitLossCash >= 0 ? "green" : "red")">
                                @FormatCurrency(Overview.TotalProfitLossCash)
                            </span>
                        </MudText>
                    </MudListItem>
                    <MudListItem>
                        <MudText><strong>ROI:</strong> @FormatPercentage(CalculateROI(Overview.TotalProfitLossCash, Overview.TotalInvestmentCash))</MudText>
                    </MudListItem>
                </MudList>
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12" md="6">
        <MudCard Elevation="3">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">
                        <MudIcon Icon="Icons.Material.Filled.Business" Class="mr-2" Color="Color.Info" />
                        Project Operations
                    </MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudList>
                    <MudListItem>
                        <MudText><strong>Total Pigs:</strong> @Overview.TotalPigsProject</MudText>
                    </MudListItem>
                    <MudListItem>
                        <MudText><strong>Investment:</strong> @FormatCurrency(Overview.TotalInvestmentProject)</MudText>
                    </MudListItem>
                    <MudListItem>
                        <MudText><strong>Profit/Loss:</strong> 
                            <span style="color: @(Overview.TotalProfitLossProject >= 0 ? "green" : "red")">
                                @FormatCurrency(Overview.TotalProfitLossProject)
                            </span>
                        </MudText>
                    </MudListItem>
                    <MudListItem>
                        <MudText><strong>ROI:</strong> @FormatPercentage(CalculateROI(Overview.TotalProfitLossProject, Overview.TotalInvestmentProject))</MudText>
                    </MudListItem>
                </MudList>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

@code {
    [Parameter] public DashboardOverview Overview { get; set; } = null!;

    private string FormatCurrency(decimal amount)
    {
        return $"${amount:N2}";
    }

    private string FormatPercentage(decimal percentage)
    {
        return $"{percentage:P1}";
    }

    private decimal CalculateROI(decimal profit, decimal investment)
    {
        return investment != 0 ? profit / investment : 0;
    }

    private string GetProfitLossIcon()
    {
        return Overview.TotalProfitLoss >= 0 ? Icons.Material.Filled.TrendingUp : Icons.Material.Filled.TrendingDown;
    }

    private Color GetProfitLossColor()
    {
        return Overview.TotalProfitLoss >= 0 ? Color.Success : Color.Error;
    }
}
