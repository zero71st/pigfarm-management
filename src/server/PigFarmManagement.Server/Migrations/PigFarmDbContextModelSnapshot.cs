// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PigFarmManagement.Server.Infrastructure.Data;

#nullable disable

namespace PigFarmManagement.Server.Migrations
{
    [DbContext(typeof(PigFarmDbContext))]
    partial class PigFarmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.ApiKeyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HashedKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("LastUsedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("RevokedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RevokedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("RolesCsv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("UsageCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("HashedKey")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.CustomerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("ExternalId")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("KeyCardId")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Zipcode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.DepositEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("PigPenId")
                        .HasColumnType("uuid");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PigPenId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.FeedEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CostDiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExternalProductCode")
                        .HasColumnType("text");

                    b.Property<string>("ExternalProductName")
                        .HasColumnType("text");

                    b.Property<string>("ExternalReference")
                        .HasColumnType("text");

                    b.Property<DateTime>("FeedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("InvoiceReferenceCode")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<Guid>("PigPenId")
                        .HasColumnType("uuid");

                    b.Property<decimal?>("Pos_TotalPriceIncludeDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceIncludeDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Sys_TotalPriceIncludeDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPriceIncludeDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("UnmappedProduct")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PigPenId");

                    b.ToTable("Feeds");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.FeedFormulaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal?>("ConsumeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ExternalId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("UnitName")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ExternalId");

                    b.ToTable("FeedFormulas");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.HarvestEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AvgWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("HarvestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PigCount")
                        .HasColumnType("integer");

                    b.Property<Guid>("PigPenId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SalePricePerKg")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PigPenId");

                    b.ToTable("Harvests");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.MigrationJobEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MigrationsApplied")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StartedAt");

                    b.ToTable("MigrationJobs");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.PigPenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ActHarvestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("DepositPerPig")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("EstimatedHarvestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("FeedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Investment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCalculationLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("PenCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("PigQty")
                        .HasColumnType("integer");

                    b.Property<decimal>("ProfitLoss")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SelectedBrand")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PenCode")
                        .IsUnique();

                    b.ToTable("PigPens");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.PigPenFormulaAssignmentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("AssignedBagPerPig")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("AssignedPigQuantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("AssignedTotalBags")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("EffectiveUntil")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("LockReason")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("LockedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("OriginalFormulaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PigPenId")
                        .HasColumnType("uuid");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Stage")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("OriginalFormulaId");

                    b.HasIndex("PigPenId");

                    b.ToTable("PigPenFormulaAssignments");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RolesCsv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.ApiKeyEntity", b =>
                {
                    b.HasOne("PigFarmManagement.Server.Infrastructure.Data.Entities.UserEntity", "User")
                        .WithMany("ApiKeys")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.DepositEntity", b =>
                {
                    b.HasOne("PigFarmManagement.Server.Infrastructure.Data.Entities.PigPenEntity", "PigPen")
                        .WithMany("Deposits")
                        .HasForeignKey("PigPenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PigPen");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.FeedEntity", b =>
                {
                    b.HasOne("PigFarmManagement.Server.Infrastructure.Data.Entities.PigPenEntity", "PigPen")
                        .WithMany("Feeds")
                        .HasForeignKey("PigPenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PigPen");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.HarvestEntity", b =>
                {
                    b.HasOne("PigFarmManagement.Server.Infrastructure.Data.Entities.PigPenEntity", "PigPen")
                        .WithMany("Harvests")
                        .HasForeignKey("PigPenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PigPen");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.PigPenEntity", b =>
                {
                    b.HasOne("PigFarmManagement.Server.Infrastructure.Data.Entities.CustomerEntity", "Customer")
                        .WithMany("PigPens")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.PigPenFormulaAssignmentEntity", b =>
                {
                    b.HasOne("PigFarmManagement.Server.Infrastructure.Data.Entities.FeedFormulaEntity", "OriginalFormula")
                        .WithMany()
                        .HasForeignKey("OriginalFormulaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PigFarmManagement.Server.Infrastructure.Data.Entities.PigPenEntity", "PigPen")
                        .WithMany("FormulaAssignments")
                        .HasForeignKey("PigPenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OriginalFormula");

                    b.Navigation("PigPen");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.CustomerEntity", b =>
                {
                    b.Navigation("PigPens");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.PigPenEntity", b =>
                {
                    b.Navigation("Deposits");

                    b.Navigation("Feeds");

                    b.Navigation("FormulaAssignments");

                    b.Navigation("Harvests");
                });

            modelBuilder.Entity("PigFarmManagement.Server.Infrastructure.Data.Entities.UserEntity", b =>
                {
                    b.Navigation("ApiKeys");
                });
#pragma warning restore 612, 618
        }
    }
}
